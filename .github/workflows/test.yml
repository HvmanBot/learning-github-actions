name: Build, Test, and Push Java Docker Image to ECR

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up JDK and Maven
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build with Maven
      run: mvn clean package
      working-directory: java-docker-app

    # Step 3: Log in to Amazon ECR
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    # Step 4: Authenticate Docker to Amazon ECR
    - name: Authenticate Docker to Amazon ECR
      id: login-ecr
      run: |
        aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 340825972166.dkr.ecr.eu-central-1.amazonaws.com

    # Step 5: Build and tag the Docker image
    - name: Build Docker Image
      run: |
        IMAGE_URI="340825972166.dkr.ecr.eu-central-1.amazonaws.com/java-docker-app:latest"
        docker build -t java-docker-app:latest .
        docker tag java-docker-app:latest $IMAGE_URI
        echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

    # Step 6: Push Docker image to Amazon ECR
    - name: Push Docker Image to ECR
      run: |
        docker push ${{ env.IMAGE_URI }}